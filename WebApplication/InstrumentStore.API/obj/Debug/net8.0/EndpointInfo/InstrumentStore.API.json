{
  "openapi": "3.0.1",
  "info": {
    "title": "InstrumentStore.API",
    "version": "1.0"
  },
  "paths": {
    "/api/Brand": {
      "get": {
        "tags": [
          "Brand"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Brand"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Brand"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Country": {
      "get": {
        "tags": [
          "Country"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/Country"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Country"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product": {
      "get": {
        "tags": [
          "Product"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCard"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCard"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductCard"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "Product"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/{id}": {
      "get": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              },
              "application/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              },
              "text/json": {
                "schema": {
                  "$ref": "#/components/schemas/ProductResponse"
                }
              }
            }
          }
        }
      }
    },
    "/api/Product/{id}": {
      "put": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/ProductRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      },
      "delete": {
        "tags": [
          "Product"
        ],
        "parameters": [
          {
            "name": "id",
            "in": "path",
            "required": true,
            "schema": {
              "type": "string",
              "format": "uuid"
            }
          }
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/api/ProductType": {
      "get": {
        "tags": [
          "ProductType"
        ],
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductType"
                  }
                }
              },
              "application/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductType"
                  }
                }
              },
              "text/json": {
                "schema": {
                  "type": "array",
                  "items": {
                    "$ref": "#/components/schemas/ProductType"
                  }
                }
              }
            }
          }
        }
      },
      "post": {
        "tags": [
          "ProductType"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "type": "string"
              }
            },
            "text/json": {
              "schema": {
                "type": "string"
              }
            },
            "application/*+json": {
              "schema": {
                "type": "string"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/register": {
      "post": {
        "tags": [
          "User"
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/RegisterUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK",
            "content": {
              "text/plain": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "application/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              },
              "text/json": {
                "schema": {
                  "type": "string",
                  "format": "uuid"
                }
              }
            }
          }
        }
      }
    },
    "/login": {
      "post": {
        "tags": [
          "User"
        ],
        "parameters": [
          {
            "name": "Features",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeObjectKeyValuePair"
              }
            }
          },
          {
            "name": "Request.HttpContext.Features",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeObjectKeyValuePair"
              }
            }
          },
          {
            "name": "Request.HttpContext.Request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpRequest"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Features",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeObjectKeyValuePair"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpRequest"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Response",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpResponse"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.RemoteIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.RemotePort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.LocalIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.LocalPort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Extensions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/X509Extension"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.HasPrivateKey",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PrivateKey.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PrivateKey.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PrivateKey.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PrivateKey.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.IssuerName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.IssuerName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.IssuerName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.IssuerName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.NotAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.NotBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.PublicKey.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.RawDataMemory.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.RawDataMemory.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SerialNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SubjectName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SubjectName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SubjectName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SubjectName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Thumbprint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Handle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Issuer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.Subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SerialNumberBytes.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Connection.ClientCertificate.SerialNumberBytes.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.WebSockets.IsWebSocketRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.WebSockets.WebSocketRequestedProtocols",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.User.Claims",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.User.Identities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.User.Identity.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.User.Identity.AuthenticationType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.User.Identity.IsAuthenticated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Items",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.RequestServices",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IServiceProvider"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.TraceIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Session.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Session.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.HttpContext.Session.Keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.StatusCode",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.Headers",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.CanRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.CanWrite",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.CanSeek",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.CanTimeout",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.Position",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.ReadTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.Body.WriteTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Response.BodyWriter.CanGetUnflushedBytes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Response.BodyWriter.UnflushedBytes",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.HttpContext.Response.ContentLength",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.HttpContext.Response.ContentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Response.Cookies",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IResponseCookies"
            }
          },
          {
            "name": "Request.HttpContext.Response.HasStarted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Connection.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.RemoteIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Request.HttpContext.Connection.RemotePort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.LocalIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Request.HttpContext.Connection.LocalPort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Extensions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/X509Extension"
              }
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.HasPrivateKey",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PrivateKey.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PrivateKey.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PrivateKey.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PrivateKey.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.IssuerName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.IssuerName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.IssuerName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.IssuerName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.NotAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.NotBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.PublicKey.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.RawDataMemory.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.RawDataMemory.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SerialNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SubjectName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SubjectName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SubjectName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SubjectName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Thumbprint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Handle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Issuer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.Subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SerialNumberBytes.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.HttpContext.Connection.ClientCertificate.SerialNumberBytes.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.WebSockets.IsWebSocketRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.WebSockets.WebSocketRequestedProtocols",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Request.HttpContext.User.Claims",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          {
            "name": "Request.HttpContext.User.Identities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            }
          },
          {
            "name": "Request.HttpContext.User.Identity.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.User.Identity.AuthenticationType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.User.Identity.IsAuthenticated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Items",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          {
            "name": "Request.HttpContext.RequestServices",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IServiceProvider"
            }
          },
          {
            "name": "Request.HttpContext.TraceIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Session.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.HttpContext.Session.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.HttpContext.Session.Keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Request.Method",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.Scheme",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.IsHttps",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Host.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.Host.HasValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Host.Host",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.Host.Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.PathBase",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PathString"
            }
          },
          {
            "name": "Request.Path",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PathString"
            }
          },
          {
            "name": "Request.QueryString.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.QueryString.HasValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Query",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringValuesKeyValuePair"
              }
            }
          },
          {
            "name": "Request.Protocol",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.Headers",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Request.Cookies",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              }
            }
          },
          {
            "name": "Request.ContentLength",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.ContentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Request.Body.CanRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Body.CanWrite",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Body.CanSeek",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Body.CanTimeout",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.Body.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.Body.Position",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Request.Body.ReadTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.Body.WriteTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Request.BodyReader",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "Request.HasFormContentType",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Request.RouteValues",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          },
          {
            "name": "Response.HttpContext.Features",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeObjectKeyValuePair"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Features",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/TypeObjectKeyValuePair"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Request",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpRequest"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Response",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpResponse"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.RemoteIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.RemotePort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.LocalIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.LocalPort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Extensions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/X509Extension"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.HasPrivateKey",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PrivateKey.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PrivateKey.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PrivateKey.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PrivateKey.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.IssuerName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.IssuerName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.IssuerName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.IssuerName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.NotAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.NotBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.PublicKey.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.RawDataMemory.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.RawDataMemory.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SerialNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SubjectName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SubjectName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SubjectName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SubjectName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Thumbprint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Handle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Issuer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.Subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SerialNumberBytes.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Connection.ClientCertificate.SerialNumberBytes.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.WebSockets.IsWebSocketRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.WebSockets.WebSocketRequestedProtocols",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.User.Claims",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.User.Identities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.User.Identity.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.User.Identity.AuthenticationType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.User.Identity.IsAuthenticated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Items",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.RequestServices",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IServiceProvider"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.TraceIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Session.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Session.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.HttpContext.Session.Keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.Method",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.Scheme",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.IsHttps",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Host.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.Host.HasValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Host.Host",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.Host.Port",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.PathBase",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PathString"
            }
          },
          {
            "name": "Response.HttpContext.Request.Path",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/PathString"
            }
          },
          {
            "name": "Response.HttpContext.Request.QueryString.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.QueryString.HasValue",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Query",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringValuesKeyValuePair"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.Protocol",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.Headers",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.Cookies",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/StringStringKeyValuePair"
              }
            }
          },
          {
            "name": "Response.HttpContext.Request.ContentLength",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.HttpContext.Request.ContentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.CanRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.CanWrite",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.CanSeek",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.CanTimeout",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.Position",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.ReadTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.Body.WriteTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Request.BodyReader",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "binary"
            }
          },
          {
            "name": "Response.HttpContext.Request.HasFormContentType",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Request.RouteValues",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": { }
            }
          },
          {
            "name": "Response.HttpContext.Response",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/HttpResponse"
            }
          },
          {
            "name": "Response.HttpContext.Connection.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.RemoteIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Response.HttpContext.Connection.RemotePort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.LocalIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Response.HttpContext.Connection.LocalPort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Extensions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/X509Extension"
              }
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.HasPrivateKey",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PrivateKey.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PrivateKey.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PrivateKey.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PrivateKey.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.IssuerName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.IssuerName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.IssuerName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.IssuerName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.NotAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.NotBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedKeyValue.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.EncodedParameters.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Key.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.PublicKey.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.RawDataMemory.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.RawDataMemory.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SerialNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SignatureAlgorithm.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SubjectName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SubjectName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SubjectName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SubjectName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Thumbprint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Handle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Issuer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.Subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SerialNumberBytes.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.HttpContext.Connection.ClientCertificate.SerialNumberBytes.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.WebSockets.IsWebSocketRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.WebSockets.WebSocketRequestedProtocols",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Response.HttpContext.User.Claims",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          {
            "name": "Response.HttpContext.User.Identities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            }
          },
          {
            "name": "Response.HttpContext.User.Identity.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.User.Identity.AuthenticationType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.User.Identity.IsAuthenticated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Items",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          {
            "name": "Response.HttpContext.RequestServices",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IServiceProvider"
            }
          },
          {
            "name": "Response.HttpContext.TraceIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Session.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.HttpContext.Session.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.HttpContext.Session.Keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "Response.StatusCode",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.Headers",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "type": "array",
                "items": {
                  "type": "string"
                }
              }
            }
          },
          {
            "name": "Response.Body.CanRead",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.Body.CanWrite",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.Body.CanSeek",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.Body.CanTimeout",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.Body.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.Body.Position",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.Body.ReadTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.Body.WriteTimeout",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Response.BodyWriter.CanGetUnflushedBytes",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Response.BodyWriter.UnflushedBytes",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.ContentLength",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int64"
            }
          },
          {
            "name": "Response.ContentType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Response.Cookies",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IResponseCookies"
            }
          },
          {
            "name": "Response.HasStarted",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Connection.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.RemoteIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Connection.RemotePort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.LocalIpAddress",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IPAddress"
            }
          },
          {
            "name": "Connection.LocalPort",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.Archived",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Connection.ClientCertificate.Extensions",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/X509Extension"
              }
            }
          },
          {
            "name": "Connection.ClientCertificate.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.HasPrivateKey",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Connection.ClientCertificate.PrivateKey.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.PrivateKey.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Connection.ClientCertificate.PrivateKey.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PrivateKey.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.IssuerName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.IssuerName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.IssuerName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.IssuerName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Connection.ClientCertificate.NotAfter",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Connection.ClientCertificate.NotBefore",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "date-time"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedKeyValue.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedKeyValue.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedParameters.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.EncodedParameters.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Key.KeySize",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Key.LegalKeySizes",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/KeySizes"
              }
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Key.SignatureAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Key.KeyExchangeAlgorithm",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.PublicKey.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Connection.ClientCertificate.RawDataMemory.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.RawDataMemory.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Connection.ClientCertificate.SerialNumber",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SignatureAlgorithm.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SignatureAlgorithm.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SubjectName.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SubjectName.Oid.Value",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SubjectName.Oid.FriendlyName",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SubjectName.RawData",
            "in": "query",
            "schema": {
              "type": "string",
              "format": "byte"
            }
          },
          {
            "name": "Connection.ClientCertificate.Thumbprint",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.Version",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.Handle",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IntPtr"
            }
          },
          {
            "name": "Connection.ClientCertificate.Issuer",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.Subject",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Connection.ClientCertificate.SerialNumberBytes.Length",
            "in": "query",
            "schema": {
              "type": "integer",
              "format": "int32"
            }
          },
          {
            "name": "Connection.ClientCertificate.SerialNumberBytes.IsEmpty",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WebSockets.IsWebSocketRequest",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "WebSockets.WebSocketRequestedProtocols",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          },
          {
            "name": "User.Claims",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/Claim"
              }
            }
          },
          {
            "name": "User.Identities",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "$ref": "#/components/schemas/ClaimsIdentity"
              }
            }
          },
          {
            "name": "User.Identity.Name",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User.Identity.AuthenticationType",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "User.Identity.IsAuthenticated",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Items",
            "in": "query",
            "schema": {
              "type": "object",
              "additionalProperties": {
                "nullable": true
              }
            }
          },
          {
            "name": "RequestServices",
            "in": "query",
            "schema": {
              "$ref": "#/components/schemas/IServiceProvider"
            }
          },
          {
            "name": "TraceIdentifier",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Session.IsAvailable",
            "in": "query",
            "schema": {
              "type": "boolean"
            }
          },
          {
            "name": "Session.Id",
            "in": "query",
            "schema": {
              "type": "string"
            }
          },
          {
            "name": "Session.Keys",
            "in": "query",
            "schema": {
              "type": "array",
              "items": {
                "type": "string"
              }
            }
          }
        ],
        "requestBody": {
          "content": {
            "application/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            },
            "text/json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            },
            "application/*+json": {
              "schema": {
                "$ref": "#/components/schemas/LoginUserRequest"
              }
            }
          }
        },
        "responses": {
          "200": {
            "description": "OK"
          }
        }
      }
    }
  },
  "components": {
    "schemas": {
      "AddressFamily": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          9,
          10,
          11,
          12,
          13,
          14,
          15,
          16,
          17,
          18,
          19,
          21,
          22,
          23,
          24,
          25,
          26,
          28,
          29,
          65536,
          65537,
          -1
        ],
        "type": "integer",
        "format": "int32"
      },
      "AsnEncodedData": {
        "type": "object",
        "properties": {
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "Assembly": {
        "type": "object",
        "properties": {
          "definedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "exportedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "codeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "entryPoint": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "imageRuntimeVersion": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isDynamic": {
            "type": "boolean",
            "readOnly": true
          },
          "location": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "reflectionOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "isFullyTrusted": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "escapedCodeBase": {
            "type": "string",
            "nullable": true,
            "readOnly": true,
            "deprecated": true
          },
          "manifestModule": {
            "$ref": "#/components/schemas/Module"
          },
          "modules": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Module"
            },
            "nullable": true,
            "readOnly": true
          },
          "globalAssemblyCache": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "hostContext": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          },
          "securityRuleSet": {
            "$ref": "#/components/schemas/SecurityRuleSet"
          }
        },
        "additionalProperties": false
      },
      "AsymmetricAlgorithm": {
        "type": "object",
        "properties": {
          "keySize": {
            "type": "integer",
            "format": "int32"
          },
          "legalKeySizes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/KeySizes"
            },
            "nullable": true,
            "readOnly": true
          },
          "signatureAlgorithm": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "keyExchangeAlgorithm": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Brand": {
        "type": "object",
        "properties": {
          "brandId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ByteReadOnlyMemory": {
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          },
          "span": {
            "$ref": "#/components/schemas/ByteReadOnlySpan"
          }
        },
        "additionalProperties": false
      },
      "ByteReadOnlySpan": {
        "type": "object",
        "properties": {
          "length": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isEmpty": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CallingConventions": {
        "enum": [
          1,
          2,
          3,
          32,
          64
        ],
        "type": "integer",
        "format": "int32"
      },
      "CancellationToken": {
        "type": "object",
        "properties": {
          "isCancellationRequested": {
            "type": "boolean",
            "readOnly": true
          },
          "canBeCanceled": {
            "type": "boolean",
            "readOnly": true
          },
          "waitHandle": {
            "$ref": "#/components/schemas/WaitHandle"
          }
        },
        "additionalProperties": false
      },
      "Claim": {
        "type": "object",
        "properties": {
          "issuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "originalIssuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "properties": {
            "type": "object",
            "additionalProperties": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          },
          "subject": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "type": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "valueType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClaimsIdentity": {
        "type": "object",
        "properties": {
          "authenticationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true
          },
          "actor": {
            "$ref": "#/components/schemas/ClaimsIdentity"
          },
          "bootstrapContext": {
            "nullable": true
          },
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true,
            "readOnly": true
          },
          "label": {
            "type": "string",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "nameClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "roleClaimType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ClaimsPrincipal": {
        "type": "object",
        "properties": {
          "claims": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Claim"
            },
            "nullable": true,
            "readOnly": true
          },
          "identities": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ClaimsIdentity"
            },
            "nullable": true,
            "readOnly": true
          },
          "identity": {
            "$ref": "#/components/schemas/IIdentity"
          }
        },
        "additionalProperties": false
      },
      "ConnectionInfo": {
        "type": "object",
        "properties": {
          "id": {
            "type": "string",
            "nullable": true
          },
          "remoteIpAddress": {
            "$ref": "#/components/schemas/IPAddress"
          },
          "remotePort": {
            "type": "integer",
            "format": "int32"
          },
          "localIpAddress": {
            "$ref": "#/components/schemas/IPAddress"
          },
          "localPort": {
            "type": "integer",
            "format": "int32"
          },
          "clientCertificate": {
            "$ref": "#/components/schemas/X509Certificate2"
          }
        },
        "additionalProperties": false
      },
      "ConstructorInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          }
        },
        "additionalProperties": false
      },
      "Country": {
        "type": "object",
        "properties": {
          "countryId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeData": {
        "type": "object",
        "properties": {
          "attributeType": {
            "$ref": "#/components/schemas/Type"
          },
          "constructor": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "constructorArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeTypedArgument"
            },
            "nullable": true,
            "readOnly": true
          },
          "namedArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeNamedArgument"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeNamedArgument": {
        "type": "object",
        "properties": {
          "memberInfo": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "typedValue": {
            "$ref": "#/components/schemas/CustomAttributeTypedArgument"
          },
          "memberName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isField": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "CustomAttributeTypedArgument": {
        "type": "object",
        "properties": {
          "argumentType": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "EventAttributes": {
        "enum": [
          0,
          512,
          1024
        ],
        "type": "integer",
        "format": "int32"
      },
      "EventInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/EventAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "addMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "removeMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "raiseMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "isMulticast": {
            "type": "boolean",
            "readOnly": true
          },
          "eventHandlerType": {
            "$ref": "#/components/schemas/Type"
          }
        },
        "additionalProperties": false
      },
      "FieldAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          4096,
          8192,
          32768,
          38144
        ],
        "type": "integer",
        "format": "int32"
      },
      "FieldInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "attributes": {
            "$ref": "#/components/schemas/FieldAttributes"
          },
          "fieldType": {
            "$ref": "#/components/schemas/Type"
          },
          "isInitOnly": {
            "type": "boolean",
            "readOnly": true
          },
          "isLiteral": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotSerialized": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "isPinvokeImpl": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "fieldHandle": {
            "$ref": "#/components/schemas/RuntimeFieldHandle"
          }
        },
        "additionalProperties": false
      },
      "GenericParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          28
        ],
        "type": "integer",
        "format": "int32"
      },
      "HostString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hasValue": {
            "type": "boolean",
            "readOnly": true
          },
          "host": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "port": {
            "type": "integer",
            "format": "int32",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "HttpContext": {
        "type": "object",
        "properties": {
          "features": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeObjectKeyValuePair"
            },
            "nullable": true,
            "readOnly": true
          },
          "request": {
            "$ref": "#/components/schemas/HttpRequest"
          },
          "response": {
            "$ref": "#/components/schemas/HttpResponse"
          },
          "connection": {
            "$ref": "#/components/schemas/ConnectionInfo"
          },
          "webSockets": {
            "$ref": "#/components/schemas/WebSocketManager"
          },
          "user": {
            "$ref": "#/components/schemas/ClaimsPrincipal"
          },
          "items": {
            "type": "object",
            "additionalProperties": {
              "nullable": true
            },
            "nullable": true
          },
          "requestServices": {
            "$ref": "#/components/schemas/IServiceProvider"
          },
          "requestAborted": {
            "$ref": "#/components/schemas/CancellationToken"
          },
          "traceIdentifier": {
            "type": "string",
            "nullable": true
          },
          "session": {
            "$ref": "#/components/schemas/ISession"
          }
        },
        "additionalProperties": false
      },
      "HttpRequest": {
        "type": "object",
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "method": {
            "type": "string",
            "nullable": true
          },
          "scheme": {
            "type": "string",
            "nullable": true
          },
          "isHttps": {
            "type": "boolean"
          },
          "host": {
            "$ref": "#/components/schemas/HostString"
          },
          "pathBase": {
            "$ref": "#/components/schemas/PathString"
          },
          "path": {
            "$ref": "#/components/schemas/PathString"
          },
          "queryString": {
            "$ref": "#/components/schemas/QueryString"
          },
          "query": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringValuesKeyValuePair"
            },
            "nullable": true
          },
          "protocol": {
            "type": "string",
            "nullable": true
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "cookies": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringKeyValuePair"
            },
            "nullable": true
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "body": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "bodyReader": {
            "type": "string",
            "format": "binary",
            "nullable": true,
            "readOnly": true
          },
          "hasFormContentType": {
            "type": "boolean",
            "readOnly": true
          },
          "form": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/StringStringValuesKeyValuePair"
            },
            "nullable": true
          },
          "routeValues": {
            "type": "object",
            "additionalProperties": { },
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "HttpResponse": {
        "type": "object",
        "properties": {
          "httpContext": {
            "$ref": "#/components/schemas/HttpContext"
          },
          "statusCode": {
            "type": "integer",
            "format": "int32"
          },
          "headers": {
            "type": "object",
            "additionalProperties": {
              "type": "array",
              "items": {
                "type": "string"
              }
            },
            "nullable": true,
            "readOnly": true
          },
          "body": {
            "type": "string",
            "format": "binary",
            "nullable": true
          },
          "bodyWriter": {
            "$ref": "#/components/schemas/PipeWriter"
          },
          "contentLength": {
            "type": "integer",
            "format": "int64",
            "nullable": true
          },
          "contentType": {
            "type": "string",
            "nullable": true
          },
          "cookies": {
            "$ref": "#/components/schemas/IResponseCookies"
          },
          "hasStarted": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ICustomAttributeProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "IIdentity": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "authenticationType": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "isAuthenticated": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IPAddress": {
        "type": "object",
        "properties": {
          "addressFamily": {
            "$ref": "#/components/schemas/AddressFamily"
          },
          "scopeId": {
            "type": "integer",
            "format": "int64"
          },
          "isIPv6Multicast": {
            "type": "boolean",
            "readOnly": true
          },
          "isIPv6LinkLocal": {
            "type": "boolean",
            "readOnly": true
          },
          "isIPv6SiteLocal": {
            "type": "boolean",
            "readOnly": true
          },
          "isIPv6Teredo": {
            "type": "boolean",
            "readOnly": true
          },
          "isIPv6UniqueLocal": {
            "type": "boolean",
            "readOnly": true
          },
          "isIPv4MappedToIPv6": {
            "type": "boolean",
            "readOnly": true
          },
          "address": {
            "type": "integer",
            "format": "int64",
            "deprecated": true
          }
        },
        "additionalProperties": false
      },
      "IResponseCookies": {
        "type": "object",
        "additionalProperties": false
      },
      "IServiceProvider": {
        "type": "object",
        "additionalProperties": false
      },
      "ISession": {
        "type": "object",
        "properties": {
          "isAvailable": {
            "type": "boolean",
            "readOnly": true
          },
          "id": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "keys": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "IntPtr": {
        "type": "object",
        "additionalProperties": false
      },
      "KeySizes": {
        "type": "object",
        "properties": {
          "minSize": {
            "type": "integer",
            "format": "int32"
          },
          "maxSize": {
            "type": "integer",
            "format": "int32"
          },
          "skipSize": {
            "type": "integer",
            "format": "int32"
          }
        },
        "additionalProperties": false
      },
      "LayoutKind": {
        "enum": [
          0,
          2,
          3
        ],
        "type": "integer",
        "format": "int32"
      },
      "LoginUserRequest": {
        "type": "object",
        "properties": {
          "eMail": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "MemberInfo": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MemberTypes": {
        "enum": [
          1,
          2,
          4,
          8,
          16,
          32,
          64,
          128,
          191
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          1024,
          2048,
          4096,
          8192,
          16384,
          32768,
          53248
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodBase": {
        "type": "object",
        "properties": {
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "MethodImplAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          8,
          16,
          32,
          64,
          128,
          256,
          512,
          4096,
          65535
        ],
        "type": "integer",
        "format": "int32"
      },
      "MethodInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "attributes": {
            "$ref": "#/components/schemas/MethodAttributes"
          },
          "methodImplementationFlags": {
            "$ref": "#/components/schemas/MethodImplAttributes"
          },
          "callingConvention": {
            "$ref": "#/components/schemas/CallingConventions"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructor": {
            "type": "boolean",
            "readOnly": true
          },
          "isFinal": {
            "type": "boolean",
            "readOnly": true
          },
          "isHideBySig": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isStatic": {
            "type": "boolean",
            "readOnly": true
          },
          "isVirtual": {
            "type": "boolean",
            "readOnly": true
          },
          "isAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyAndAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isFamilyOrAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethod": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "methodHandle": {
            "$ref": "#/components/schemas/RuntimeMethodHandle"
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "returnParameter": {
            "$ref": "#/components/schemas/ParameterInfo"
          },
          "returnType": {
            "$ref": "#/components/schemas/Type"
          },
          "returnTypeCustomAttributes": {
            "$ref": "#/components/schemas/ICustomAttributeProvider"
          }
        },
        "additionalProperties": false
      },
      "Module": {
        "type": "object",
        "properties": {
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "fullyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "moduleVersionId": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "scopeName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "moduleHandle": {
            "$ref": "#/components/schemas/ModuleHandle"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ModuleHandle": {
        "type": "object",
        "properties": {
          "mdStreamVersion": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "Oid": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ParameterAttributes": {
        "enum": [
          0,
          1,
          2,
          4,
          8,
          16,
          4096,
          8192,
          16384,
          32768,
          61440
        ],
        "type": "integer",
        "format": "int32"
      },
      "ParameterInfo": {
        "type": "object",
        "properties": {
          "attributes": {
            "$ref": "#/components/schemas/ParameterAttributes"
          },
          "member": {
            "$ref": "#/components/schemas/MemberInfo"
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "parameterType": {
            "$ref": "#/components/schemas/Type"
          },
          "position": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isIn": {
            "type": "boolean",
            "readOnly": true
          },
          "isLcid": {
            "type": "boolean",
            "readOnly": true
          },
          "isOptional": {
            "type": "boolean",
            "readOnly": true
          },
          "isOut": {
            "type": "boolean",
            "readOnly": true
          },
          "isRetval": {
            "type": "boolean",
            "readOnly": true
          },
          "defaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "rawDefaultValue": {
            "nullable": true,
            "readOnly": true
          },
          "hasDefaultValue": {
            "type": "boolean",
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PathString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hasValue": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "PipeWriter": {
        "type": "object",
        "properties": {
          "canGetUnflushedBytes": {
            "type": "boolean",
            "readOnly": true
          },
          "unflushedBytes": {
            "type": "integer",
            "format": "int64",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "ProductCard": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductRequest": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "productTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "brandId": {
            "type": "string",
            "format": "uuid"
          },
          "countryId": {
            "type": "string",
            "format": "uuid"
          }
        },
        "additionalProperties": false
      },
      "ProductResponse": {
        "type": "object",
        "properties": {
          "productId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          },
          "description": {
            "type": "string",
            "nullable": true
          },
          "price": {
            "type": "number",
            "format": "double"
          },
          "quantity": {
            "type": "integer",
            "format": "int32"
          },
          "image": {
            "type": "string",
            "nullable": true
          },
          "productType": {
            "type": "string",
            "nullable": true
          },
          "brand": {
            "type": "string",
            "nullable": true
          },
          "country": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "ProductType": {
        "type": "object",
        "properties": {
          "productTypeId": {
            "type": "string",
            "format": "uuid"
          },
          "name": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "PropertyAttributes": {
        "enum": [
          0,
          512,
          1024,
          4096,
          8192,
          16384,
          32768,
          62464
        ],
        "type": "integer",
        "format": "int32"
      },
      "PropertyInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "propertyType": {
            "$ref": "#/components/schemas/Type"
          },
          "attributes": {
            "$ref": "#/components/schemas/PropertyAttributes"
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "canRead": {
            "type": "boolean",
            "readOnly": true
          },
          "canWrite": {
            "type": "boolean",
            "readOnly": true
          },
          "getMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          },
          "setMethod": {
            "$ref": "#/components/schemas/MethodInfo"
          }
        },
        "additionalProperties": false
      },
      "PublicKey": {
        "type": "object",
        "properties": {
          "encodedKeyValue": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "encodedParameters": {
            "$ref": "#/components/schemas/AsnEncodedData"
          },
          "key": {
            "$ref": "#/components/schemas/AsymmetricAlgorithm"
          },
          "oid": {
            "$ref": "#/components/schemas/Oid"
          }
        },
        "additionalProperties": false
      },
      "QueryString": {
        "type": "object",
        "properties": {
          "value": {
            "type": "string",
            "nullable": true
          },
          "hasValue": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "RegisterUserRequest": {
        "type": "object",
        "properties": {
          "firstName": {
            "type": "string",
            "nullable": true
          },
          "surname": {
            "type": "string",
            "nullable": true
          },
          "patronymic": {
            "type": "string",
            "nullable": true
          },
          "telephone": {
            "type": "string",
            "nullable": true
          },
          "eMail": {
            "type": "string",
            "nullable": true
          },
          "password": {
            "type": "string",
            "nullable": true
          },
          "city": {
            "type": "string",
            "nullable": true
          },
          "street": {
            "type": "string",
            "nullable": true
          },
          "entrance": {
            "type": "string",
            "nullable": true
          },
          "flat": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "RuntimeFieldHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeMethodHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "RuntimeTypeHandle": {
        "type": "object",
        "properties": {
          "value": {
            "$ref": "#/components/schemas/IntPtr"
          }
        },
        "additionalProperties": false
      },
      "SafeWaitHandle": {
        "type": "object",
        "properties": {
          "isClosed": {
            "type": "boolean",
            "readOnly": true
          },
          "isInvalid": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "SecurityRuleSet": {
        "enum": [
          0,
          1,
          2
        ],
        "type": "integer",
        "format": "int32"
      },
      "StringStringKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "string",
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "StringStringValuesKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "type": "string",
            "nullable": true
          },
          "value": {
            "type": "array",
            "items": {
              "type": "string"
            }
          }
        },
        "additionalProperties": false
      },
      "StructLayoutAttribute": {
        "type": "object",
        "properties": {
          "typeId": {
            "nullable": true,
            "readOnly": true
          },
          "value": {
            "$ref": "#/components/schemas/LayoutKind"
          }
        },
        "additionalProperties": false
      },
      "Type": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeAttributes": {
        "enum": [
          0,
          1,
          2,
          3,
          4,
          5,
          6,
          7,
          8,
          16,
          24,
          32,
          128,
          256,
          1024,
          2048,
          4096,
          8192,
          16384,
          65536,
          131072,
          196608,
          262144,
          264192,
          1048576,
          12582912
        ],
        "type": "integer",
        "format": "int32"
      },
      "TypeInfo": {
        "type": "object",
        "properties": {
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "customAttributes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/CustomAttributeData"
            },
            "nullable": true,
            "readOnly": true
          },
          "isCollectible": {
            "type": "boolean",
            "readOnly": true
          },
          "metadataToken": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "isInterface": {
            "type": "boolean",
            "readOnly": true
          },
          "memberType": {
            "$ref": "#/components/schemas/MemberTypes"
          },
          "namespace": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assemblyQualifiedName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "fullName": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "assembly": {
            "$ref": "#/components/schemas/Assembly"
          },
          "module": {
            "$ref": "#/components/schemas/Module"
          },
          "isNested": {
            "type": "boolean",
            "readOnly": true
          },
          "declaringType": {
            "$ref": "#/components/schemas/Type"
          },
          "declaringMethod": {
            "$ref": "#/components/schemas/MethodBase"
          },
          "reflectedType": {
            "$ref": "#/components/schemas/Type"
          },
          "underlyingSystemType": {
            "$ref": "#/components/schemas/Type"
          },
          "isTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isConstructedGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericMethodParameter": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericType": {
            "type": "boolean",
            "readOnly": true
          },
          "isGenericTypeDefinition": {
            "type": "boolean",
            "readOnly": true
          },
          "isSZArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isVariableBoundArray": {
            "type": "boolean",
            "readOnly": true
          },
          "isByRefLike": {
            "type": "boolean",
            "readOnly": true
          },
          "isFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnmanagedFunctionPointer": {
            "type": "boolean",
            "readOnly": true
          },
          "hasElementType": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeArguments": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "genericParameterPosition": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          },
          "genericParameterAttributes": {
            "$ref": "#/components/schemas/GenericParameterAttributes"
          },
          "attributes": {
            "$ref": "#/components/schemas/TypeAttributes"
          },
          "isAbstract": {
            "type": "boolean",
            "readOnly": true
          },
          "isImport": {
            "type": "boolean",
            "readOnly": true
          },
          "isSealed": {
            "type": "boolean",
            "readOnly": true
          },
          "isSpecialName": {
            "type": "boolean",
            "readOnly": true
          },
          "isClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedAssembly": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamANDAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamily": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedFamORAssem": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPrivate": {
            "type": "boolean",
            "readOnly": true
          },
          "isNestedPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isNotPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isPublic": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isExplicitLayout": {
            "type": "boolean",
            "readOnly": true
          },
          "isLayoutSequential": {
            "type": "boolean",
            "readOnly": true
          },
          "isAnsiClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isAutoClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isUnicodeClass": {
            "type": "boolean",
            "readOnly": true
          },
          "isCOMObject": {
            "type": "boolean",
            "readOnly": true
          },
          "isContextful": {
            "type": "boolean",
            "readOnly": true
          },
          "isEnum": {
            "type": "boolean",
            "readOnly": true
          },
          "isMarshalByRef": {
            "type": "boolean",
            "readOnly": true
          },
          "isPrimitive": {
            "type": "boolean",
            "readOnly": true
          },
          "isValueType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSignatureType": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecuritySafeCritical": {
            "type": "boolean",
            "readOnly": true
          },
          "isSecurityTransparent": {
            "type": "boolean",
            "readOnly": true
          },
          "structLayoutAttribute": {
            "$ref": "#/components/schemas/StructLayoutAttribute"
          },
          "typeInitializer": {
            "$ref": "#/components/schemas/ConstructorInfo"
          },
          "typeHandle": {
            "$ref": "#/components/schemas/RuntimeTypeHandle"
          },
          "guid": {
            "type": "string",
            "format": "uuid",
            "readOnly": true
          },
          "baseType": {
            "$ref": "#/components/schemas/Type"
          },
          "isSerializable": {
            "type": "boolean",
            "readOnly": true,
            "deprecated": true
          },
          "containsGenericParameters": {
            "type": "boolean",
            "readOnly": true
          },
          "isVisible": {
            "type": "boolean",
            "readOnly": true
          },
          "genericTypeParameters": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredConstructors": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/ConstructorInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredEvents": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/EventInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredFields": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/FieldInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMembers": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MemberInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredMethods": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/MethodInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredNestedTypes": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/TypeInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "declaredProperties": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/PropertyInfo"
            },
            "nullable": true,
            "readOnly": true
          },
          "implementedInterfaces": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/Type"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "TypeObjectKeyValuePair": {
        "type": "object",
        "properties": {
          "key": {
            "$ref": "#/components/schemas/Type"
          },
          "value": {
            "nullable": true
          }
        },
        "additionalProperties": false
      },
      "WaitHandle": {
        "type": "object",
        "properties": {
          "handle": {
            "$ref": "#/components/schemas/IntPtr"
          },
          "safeWaitHandle": {
            "$ref": "#/components/schemas/SafeWaitHandle"
          }
        },
        "additionalProperties": false
      },
      "WebSocketManager": {
        "type": "object",
        "properties": {
          "isWebSocketRequest": {
            "type": "boolean",
            "readOnly": true
          },
          "webSocketRequestedProtocols": {
            "type": "array",
            "items": {
              "type": "string"
            },
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "X500DistinguishedName": {
        "type": "object",
        "properties": {
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "name": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "X509Certificate2": {
        "type": "object",
        "properties": {
          "handle": {
            "$ref": "#/components/schemas/IntPtr"
          },
          "issuer": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "subject": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "serialNumberBytes": {
            "$ref": "#/components/schemas/ByteReadOnlyMemory"
          },
          "archived": {
            "type": "boolean"
          },
          "extensions": {
            "type": "array",
            "items": {
              "$ref": "#/components/schemas/X509Extension"
            },
            "nullable": true,
            "readOnly": true
          },
          "friendlyName": {
            "type": "string",
            "nullable": true
          },
          "hasPrivateKey": {
            "type": "boolean",
            "readOnly": true
          },
          "privateKey": {
            "$ref": "#/components/schemas/AsymmetricAlgorithm"
          },
          "issuerName": {
            "$ref": "#/components/schemas/X500DistinguishedName"
          },
          "notAfter": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "notBefore": {
            "type": "string",
            "format": "date-time",
            "readOnly": true
          },
          "publicKey": {
            "$ref": "#/components/schemas/PublicKey"
          },
          "rawData": {
            "type": "string",
            "format": "byte",
            "nullable": true,
            "readOnly": true
          },
          "rawDataMemory": {
            "$ref": "#/components/schemas/ByteReadOnlyMemory"
          },
          "serialNumber": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "signatureAlgorithm": {
            "$ref": "#/components/schemas/Oid"
          },
          "subjectName": {
            "$ref": "#/components/schemas/X500DistinguishedName"
          },
          "thumbprint": {
            "type": "string",
            "nullable": true,
            "readOnly": true
          },
          "version": {
            "type": "integer",
            "format": "int32",
            "readOnly": true
          }
        },
        "additionalProperties": false
      },
      "X509Extension": {
        "type": "object",
        "properties": {
          "oid": {
            "$ref": "#/components/schemas/Oid"
          },
          "rawData": {
            "type": "string",
            "format": "byte",
            "nullable": true
          },
          "critical": {
            "type": "boolean"
          }
        },
        "additionalProperties": false
      }
    }
  }
}